#!/usr/bin/env bash

#Author: @DawsonBotsford  |  dawsonbotsford.com
#Repo Location: https://github.com/dawsonbotsford/swim
#Date: 09-28-2015

VERSION="0.4.0-prelaunch"
usrDir=$(cd $(dirname $0);pwd)

function print_help() {
  printf "
Switch vimrc files with a single command

Usage:
  swim add <URLToRaw or pathToFile>  <alias>   Add a swim alias
  swim with <alias>                            Change active vimrc file
  swim ls                                      List aliased vimrc files
  swim active                                  Show currently active vimrc
  swim vim <alias>			       Edit the vimrc stored at alias
  swim mv <alias1> <alias2>                    Rename alias
  swim rm <alias>                              Delete an alias entirely
  swim update                                  Download newest version of swim
  swim version                                 Print version
  swim help                                    Show this message


Example:
  swim add https://raw.githubusercontent.com/dawsonbotsford/swim/master/exampleVimrcs/vimrcWikia.vim example
  swim ls                    Show available swim aliases
  swim with example          Set ~/.swim/example.vim as primary .vimrc
  swim with main             Set ~/.swim/main.vim as primary .vimrc


Setup:
  On install, you will have the \"main\" swim alias. Add alternate vimrc aliases with \"swim add <URLToRaw or pathToFile>  <alias>\"
  Then use \"swim with <alias\" to change your active vimrc file.


Report bugs to: https://github.com/dawsonbotsford/swim/issues

Uninstall:
    swim uninstall
"
}

#Print the current aliases available to swim with
#Store as swimrc.<alias> files in $HOME/.swim
function swim_ls() {

  #No swim aliases
  if [[ ! $(ls -A $HOME/.swim 2>/dev/null) ]]; then
    printf "nothing to swim with. Try a \"swim add\"" | chalk red
    exit
  fi

  printf "%s\n" "--------------------------" | chalk white
  for file in $HOME/.swim/*
  do

    alias=$(echo $file | cut -d / -f 5 | cut -d . -f 1)

    #chalk active with green, default otherwise
    if [[ $(readlink $HOME/.vimrc | cut -d / -f 5 | cut -d . -f 1) == $alias ]]; then
      printf "> "$alias" (active)\n" | chalk green
    else
      printf $alias"\n"
    fi
  done
  printf "%s\n" "--------------------------" | chalk white
}

#Add alias to swim. Takes as input a url or a path and a destination alias
function add_alias() {
  if [ $# -lt 2 ]
  then
    print_help
    exit
  fi
  src=$1
  dest=$2
  webRegex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
  if [[ $1 =~ $webRegex ]]
  then
    printf "fetching from the web...\n" | chalk yellow
    curl -o $HOME/.swim/$2.vim -s $1
  else
    cp $1 $HOME/.swim/$2.vim
  fi
  printf "swim alias \"$2\" added\n" | chalk yellow
  swim with $2
}

#Moves an alias from arg1 to arg2
function mv_alias() {
  if [ $# -lt 2 ]
  then
    print_help
    exit
  fi
  src=$1
  dest=$2

  #alias not found
  if [[ ! $(ls -A $HOME/.swim/$1.vim 2>/dev/null) ]]; then
    printf "alias $1 not found" | chalk red
    swim_ls
    exit
  fi

  mv $HOME/.swim/$1.vim $HOME/.swim/$2.vim

  printf "swim alias \"$2\" added\n" | chalk yellow

  #if trying to move active vimrc
  if [[ $(readlink $HOME/.vimrc | cut -d / -f 5 | cut -d . -f 1) == $1 ]]; then
    swim with $2
  fi

}

#Permanently deletes available swim alias
function remove_alias() {
  if [ $# -eq 0 ]; then
    print_help
    exit
  fi

  #alias does not exist
  if [[ ! $(ls -A $HOME/.swim/$1.vim 2>/dev/null) ]]; then
    printf "alias $1 does not exist" | chalk red
    sleep 1
    print_help
    exit
  fi

  #Trying to delete active vimrc
  if [[ $(readlink $HOME/.vimrc | cut -d / -f 5 | cut -d . -f 1) == $1 ]]; then
    swim with main
  fi

  rm $HOME/.swim/$1.vim
  printf "removed alias $1\n" | chalk green
}

function backup_vimrc (){
  if [ -a "$HOME/.vimrc" ]; then
    mv $HOME/.vimrc $HOME/.swim/oldvimrc.vim
  fi
}

#Help conditions
if [ $# -lt 1 ]; then
  print_help
  exit
fi

while [ $# -gt 0 ]; do
  case "$1" in
    help | -h) print_help
      shift
      exit;;

    add | new | -a) add_alias $2 $3
      exit;;

    with | use) shift
      #if alias exists
      if [ -e "$HOME/.swim/$1.vim" ]; then
        #Setting active to what's already active
        if [[ $(readlink $HOME/.vimrc | cut -d / -f 5 | cut -d . -f 1) == $1 ]]; then
          printf "$1 is already active.\n" | chalk red
          exit
        fi
        backup_vimrc
        rm $HOME/.vimrc 2>/dev/null
        ln -s $HOME/.swim/$1.vim $HOME/.vimrc
        printf "swimming with "$1 | chalk green
      else
        printf "alias $1 not found\n" | chalk red
        swim_ls
      fi
      exit;;

    ls | show | -l) shift
      swim_ls
      exit;;

    active | current) file=$(readlink $HOME/.vimrc)
      if [ $file ]; then
        printf $file | cut -d / -f 5 | cut -d . -f 1 | chalk green
      else
        printf "vimrc not found. Perform a \"swim add\" and \"swim with\"\n" | chalk red
        exit
      fi
      shift;;

    vim | edit | emacs) shift
      if [ ! $# -eq 1 ]; then
        printf "expected 1 arg, received $#" | chalk red
      else
        # "${EDITOR:-vi}" $HOME/.swim/swimrc.$1
       vim $HOME/.swim/$1\.vim
      fi
      exit;;


    rename | mv | move) mv_alias $2 $3
      exit;;

    delete | rm | remove | -d) remove_alias $2
                     exit;;

    update | install) printf "Old version: " && printf $VERSION | chalk bold red
      printf "Downloading swim from Github.com/dawsonbotsford/swim...\n" | chalk yellow
      curl -o $usrDir/swim -s https://raw.githubusercontent.com/dawsonbotsford/swim/master/swim
      chmod +x $usrDir/swim
      printf "New version: " && swim version | chalk green
      exit;;

    version | -v | -V) printf $VERSION | chalk yellow
      exit;;

    uninstall) curl -s https://raw.githubusercontent.com/dawsonbotsford/swim/master/uninstall | bash
      exit;;

    *) print_help
      exit;;
  esac
done
